@using TravelFinalProject.Utilities.Enums
@using TravelFinalProject.ViewModels
@using TravelFinalProject.ViewModels.BlogVM
@model PaginatedVM<BlogVM>
<section class="breadcrumb-main pb-0" style="background-image: url(images/bg/bg8.jpg);">
    <div class="breadcrumb-outer pt-10">
        <div class="container">
            <div class="breadcrumb-content d-md-flex align-items-center pt-10">
                <h2 class="mb-0">Blogs</h2>
            
            </div>
        </div>
    </div>
    <div class="dot-overlay"></div>
</section>
<!-- BreadCrumb Ends -->
<!-- blog starts -->
<section class="blog blog-fullwidth">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 mx-auto">
                <div class="listing-inner">
                    <div class="list-results d-flex align-items-center justify-content-between">
                        <div class="list-results-sort">
                            <p class="m-0">Showing 1-5 of 80 results</p>
                        </div>
                        <div class="click-menu d-flex align-items-center justify-content-between">
                            <div class="change-list f-active mr-2"><a href="blog-list.html"><i class="fa fa-bars"></i></a></div>
                            <div class="change-grid"><a href="blog-grid.html"><i class="fa fa-th"></i></a></div>
                            <div class="sortby d-flex align-items-center justify-content-between ml-2">
                                @{
                                    var allowedSorts = new List<SortType> { SortType.Date, SortType.Rating };
                                }
                                <form asp-action="Blog" method="get">
                                    <select name="key" onchange="this.form.submit()" class="niceSelect">
                                        <option value="0">Sort By</option>
                                        @foreach (var sort in allowedSorts)
                                        {
                                            <option value="@((int)sort)">
                                                Sort by @sort.ToString()
                                            </option>
                                        }
                                    </select>
                                </form>

                            </div>
                        </div>
                    </div>


                    @foreach (var blog in Model.Items)
                    {
                        <div class="blog-full d-flex justify-content-between mb-4 align-items-start">
                            <div class="blog-image" style="flex: 0 0 40%; max-width: 40%;">
                                <a href="@Url.Action("Blog", "Blog", new { id = blog.Id })"
                                   style="display:block; height: 250px; background-image: url('@Url.Content("~/assets/images/blog/" + blog.ImageUrl)'); background-size: cover; background-position: center;">
                                </a>
                            </div>
                            <div class="blog-content" style="flex: 1; padding-left: 20px;">
                                <span class="h-date pink mb-1 font-weight-light d-block">@blog.PublishedDate.ToString("MMM dd, yyyy")</span>

                                <h3 class="mb-2"><a href="#">@blog.Title</a></h3>

                                <p class="mb-2 border-t pt-2">
                                    @((blog.Content?.Length > 200 ? blog.Content.Substring(0, 200) + "..." : blog.Content))
                                </p>
                                <a asp-action="BlogDetail" asp-route-id="@blog.Id" class="grey font-weight-light">Read This <i class="fa fa-long-arrow-alt-right"></i></a>
                            </div>
                        </div>
                    }

                    <div class="pagination-main text-center">
                        <ul class="pagination justify-content-center">

                        
                            <li class="@(Model.CurrentPage == 1 ? "disabled" : "") page-item">
                                <a class="page-link" href="@Url.Action("Blog", new { page = Model.CurrentPage - 1 })" aria-label="Previous">
                                    <span aria-hidden="true"><i class="fa fa-angle-double-left"></i></span>
                                </a>
                            </li>

                           
                            @for (int i = 1; i <= Model.TotalPage; i++)
                            {
                                <li class="@(i == Model.CurrentPage ? "active" : "") page-item">
                                    <a class="page-link" href="@Url.Action("Blog", new { page = i })">@i</a>
                                </li>
                            }

                        
                            <li class="@(Model.CurrentPage == Model.TotalPage ? "disabled" : "") page-item">
                                <a class="page-link" href="@Url.Action("Blog", new { page = Model.CurrentPage + 1 })" aria-label="Next">
                                    <span aria-hidden="true"><i class="fa fa-angle-double-right"></i></span>
                                </a>
                            </li>
                        </ul>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>
 